<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxMAAAsTAQCanBgAAAPWSURBVHhe7Zl7SxRRGMZ3ve3qotmWuavbdymLwMpLXrDs
        YoiaIUolimthahRZxG4ataKy3aTc0Eyrf8SCwAqkqIgKg4goqU9xmlnPTjvzvu5u54w6I+eBH+jMmed5
        3p11LmgREhISEhISEhISwvVo9mWlmaFjsGvy2RwxM3QMdmGmZoKOwS7M1EzQMdilNWwbDBgabV86BruA
        YdE2QwP68goYIqFGAvTlFTBEQhMhrakK3a43oC+vgCESGo+k6t0k/9sEST9Th+7XE9CXV8AQCY2H8+Fl
        svXPU+L+eI9Yy3aia/QC9OUVMERCY2FvrwkPHyHrRge6Ti9AX14BQyR0OeSz7f4wqvoAPD8mSfKRveh6
        PQB9eQUMkdDlkM92ZPC8z/eVn53jfeh6PQB9eQUMkVCMlPoy4vk1TYcfI0n7C4n7Pf02/H5CbK2H0eN4
        AX15BQyRUIyc59eVM57e3RDeJt8FItty54PEUowfywPoyytgiIRqyeg9rgy6eWZAtS9n5pqyz3GpRbVP
        D0BfXmkNM3oa45L3JRQe0PNziqTU7VMVTG0oJ55F+qexECLWyl2q/SqKt5P0rno0A8N+ulbVVYaOwS6t
        YeTsJUJWwIsOtiHYpazJvtuDrpFx9DWr/OIhP2do+9Ix2KU1xIIxXO/uEGtpATqYtVy6PX6id4XFxyS1
        sQKsSTpQKD09jgPfWKzKB2BvP5oQKbUlYKhoHBealOLa64TMxrHzyv7s0V40Q4vt5EFVVxk6BruAoaYo
        D1teBJQho98TbCeqw7dKebvrzS1iWeabhAH68goYIqGspB6rUC6IkfcEa+kO4np7e+mDYXheAH15BQyR
        UB6yR88p3wL5yTFzoE35fdPUFfSYWIC+vAKGSCgP8hNi5GKX/30yjPxz+J2hpgg9JhagL6+AIRLKi6Ov
        RTnrETL9rejaeIC+vAKGSCg30iNx7usRZXjX/E1iKdmOr40D6MsrYIiE6kFac9XSlV++8Em3M2xNIoC+
        vAKGSKheOMcvEucE36sy6MsrYIiE6kXyoT1hsH2JAvryChgioUYC9OUVMERCjQToyyutIfbvKCOh7UvH
        YJfW0GzQMdiFmZoJOga7MFMzQcdgF2ZqJugY7JqcnXugJ4HQ9KtYYMfwQMcwjjr8wyQWdNn6FTZ0NHTZ
        +hU2dDR0mfnUHQzaO3xDBdIQlXFAB48CO+YfUkZzf7+NxhpDnb5Bt1TuqwQ20Eqw0OkfyqXxay+vf7gH
        KbmyXB05S+PXXl7f0BhacgWRM2n82svrGzkllQqtJnImjRcSEhISEhISEvp/WSx/AeCvej8u6PumAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>